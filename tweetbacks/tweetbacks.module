<?php
// $Id: tweetbacks.module,v 1.3 2009/01/14 03:13:46 cscharabaruk Exp $

/**
 * @file
 * Tweetbacks. See Twitter posts referencing your website's pages.
 */

/**
 * Implementation of hook_init().
 */
function tweetbacks_init() {
  drupal_add_css(drupal_get_path('module', 'tweetbacks') .'/tweetbacks.css');
}

/**
 * Implementation of hook_block().
 */
function tweetbacks_block($op = 'list', $delta = 0, $edit = array()) {
  global $theme_key;

  switch ($op) {
  case 'list': // List all the blocks
    return array(
      'tweetbacks' => array(
        'info' => t('Tweetbacks'),
      ),
      'stats' => array(
        'info' => t('Tweetback Statistics'),
      ),
    );
  case 'configure': // Show configuration options
    switch ($delta) {
    case 'tweetbacks':
      return _tweetbacks_tb_configure();
    case 'stats':
      return _tweetbacks_stats_configure();
    }
  case 'save': // Save block configuration
    switch ($delta) {
    case 'tweetbacks':
      _tweetbacks_tb_save($edit);
      break;
    case 'stats':
      _tweetbacks_stats_save($edit);
      break;
    }
    break;
  case 'view': // View the block
    switch ($delta) {
    case 'tweetbacks':
      return _tweetbacks_tb_view();
    case 'stats':
      return _tweetbacks_stats_view();
    }
    break;
  }
}

function _tweetbacks_tb_save($edit = array()) {
  variable_set('tweetbacks_count_only', $edit['countonly']);

  variable_set('tweetbacks_max', $edit['max']);
  
  variable_set('tweetbacks_show_avatar', $edit['avatar']);
  variable_set('tweetbacks_styling', $edit['styling']);
  variable_set('tweetbacks_title', $edit['tbtitle']);

  variable_set('tweetbacks_blocked', $edit['blocked_users']);

  variable_set('tweetbacks_stats', $edit['stats']);

  return;
}

function _tweetbacks_tb_configure() {
  $form['dbgver'] = array(
    '#type' => 'markup',
    '#value' => '<p>$Id: tweetbacks.module,v 1.3 2009/01/14 03:13:46 cscharabaruk Exp $</p>',
    '#weight' => -1,
  );

  $form['countonly'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display only the number of tweets'),
    '#default_value' => variable_get('tweetbacks_count_only', FALSE),
    '#description' => t('Show only the number of tweets the page has recieved, not the tweets themselves.'),
    '#weight' => 0,
  );

  $form['max'] = array(
    '#type' => 'select',
    '#title' => t('Limit number of tweets shown'),
    '#options' => array(0 => t('No limit'), 1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
    '#default_value' => variable_get('tweetbacks_max', 0),
    '#description' => t('Set the <em>maximum</em> number of tweets shown for a page.'),
    '#weight' => 1,
  );

  $form['avatar'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show avatars.'),
    '#default_value' => variable_get('tweetbacks_show_avatar', TRUE),
    '#description' => t('If unchecked, avatar icons won\'t be shown for Twitter users in the block.'),
    '#weight' => 2,
  );
  
  $form['styling'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use default styling.'),
    '#default_value' => variable_get('tweetbacks_styling', TRUE),
    '#description' => t('Use the default CSS styles as provided by Tweetbacks.'),
    '#weight' => 3,
  );

  $form['tbtitle'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display number of tweets'),
    '#default_value' => variable_get('tweetbacks_title', TRUE),
    '#description' => t('Show the number of tweets above the list of tweets for a page.'),
    '#weight' => 4,
  );

  $form['blocked_users'] = array(
    '#type' => 'textfield',
    '#title' => t('Blocked users'),
    '#default_value' => variable_get('tweetbacks_blocked', ''),
    '#description' => t('Twitter users listed here will be filtered from the tweets shown. Seperate user names with the <strong>+</strong> sign.'),
    '#weight' => 5,
  );

  $form['stats'] = array(
    '#type' => 'checkbox',
    '#title' => t('Collect statistics on tweets.'),
    '#default_value' => variable_get('tweetbacks_stats', FALSE),
    '#description' => t('If checked, Tweetbacks will collect statistics for the %stats block.',
      array('%stats' => t('Tweetback Statistics'))
    ),
    '#weight' => 6,
  );

  return $form;
}

function _tweetbacks_tb_view() {
  // get site prefs
  $countonly = variable_get('tweetbacks_count_only', FALSE);
  $max = variable_get('tweetbacks_max', 0);
  $avatars = variable_get('tweetbacks_show_avatar', TRUE);
  $styling = variable_get('tweetbacks_styling', TRUE);
  $title = variable_get('tweetbacks_title', TRUE);
  $blocked = variable_get('tweetbacks_blocked', '');
  $stats = variable_get('tweetbacks_stats', FALSE);

  // build script tag
  $output = '<script src="http://danzarrella.com/tb.js?';
  
  if (TRUE == $countonly) {
    $output .= 'countonly=true';
  }
  else {
    $output .= ($max != 0) ? 'max='. $max : '';

    if (!$avatars) {
      $output .= '&noavatars=true';
    }
    if (!$styling) {
      $output .= '&nostyle=true';
    }
    if (!$title) {
      $output .= '&notitle=true';
    }
    if ($blocked != '') {
      $output .= '&blockedusers='. $blocked;
    }
  }

  if ($stats) {
    $output .= '&stats=true&title=';
    $output .= urlencode(drupal_get_title());
  }

  $output .= '"></script>';

  return array(
    'subject' => t('Tweetbacks'),
    'content' => $output,
  );
}

function _tweetbacks_stats_save($edit = array()) {
  variable_set('tweetbacks_stats_max', $edit['max']);

  return;
}

function _tweetbacks_stats_configure() {
  $form['max'] = array(
    '#type' => 'select',
    '#title' => t('Limit number of pages listed'),
    '#options' => array(0 => t('No limit'), 1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
    '#default_value' => variable_get('tweetbacks_stats_max', 5),
  );

  return $form;
}

function _tweetbacks_stats_view() {
  $max = variable_get('tweetbacks_stats_max', 5);

  $output = '<script src="http://danzarrella.com/tsjs.php';
  $output .= ($max != 0) ? '?max='. $max : '';
  $output .= '"></script>';

  return array(
    'subject' => t('Tweetback Statistics'),
    'content' => $output,
  );
}
