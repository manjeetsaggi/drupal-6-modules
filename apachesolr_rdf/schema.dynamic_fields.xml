<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id: schema.dynamic_fields.xml,v 1.1.2.4 2009/11/01 23:31:38 drunkenmonkey Exp $ -->

<schema name="rdf" version="1.1">

  <types>

    <!-- The StrField type is not analyzed, but indexed/stored verbatim.  
       - StrField and TextField support an optional compressThreshold which
       limits compression (if enabled in the derived fields) to values which
       exceed a certain size (in characters).
    -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

    <!-- The optional sortMissingLast and sortMissingFirst attributes are
         currently supported on types that are sorted internally as strings.
       - If sortMissingLast="true", then a sort on this field will cause documents
         without the field to come after documents with the field,
         regardless of the requested sort order (asc or desc).
       - If sortMissingFirst="true", then a sort on this field will cause documents
         without the field to come before documents with the field,
         regardless of the requested sort order.
       - If sortMissingLast="false" and sortMissingFirst="false" (the default),
         then default lucene sorting will be used which places docs without the
         field first in an ascending sort and last in a descending sort.
    -->
    
    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>

    <!-- numeric field types that store and index the text
         value verbatim (and hence don't support range queries, since the
         lexicographic ordering isn't equal to the numeric ordering) -->
    <fieldType name="integer" class="solr.IntField" omitNorms="true"/>
    <fieldType name="long" class="solr.LongField" omitNorms="true"/>
    <fieldType name="float" class="solr.FloatField" omitNorms="true"/>
    <fieldType name="double" class="solr.DoubleField" omitNorms="true"/>


    <!-- Numeric field types that manipulate the value into
         a string value that isn't human-readable in its internal form,
         but with a lexicographic ordering the same as the numeric ordering,
         so that range queries work correctly. -->
    <fieldType name="sint" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="slong" class="solr.SortableLongField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sfloat" class="solr.SortableFloatField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sdouble" class="solr.SortableDoubleField" sortMissingLast="true" omitNorms="true"/>

    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
         is a more restricted form of the canonical representation of dateTime
         http://www.w3.org/TR/xmlschema-2/#dateTime
         The trailing "Z" designates UTC time and is mandatory.
         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
         All other components are mandatory.

         Expressions can also be used to denote calculations that should be
         performed relative to "NOW" to determine the value, ie...

               NOW/HOUR
                  ... Round to the start of the current hour
               NOW-1DAY
                  ... Exactly 1 day prior to now
               NOW/DAY+6MONTHS+3DAYS
                  ... 6 months and 3 days in the future from the start of
                      the current day

         Consult the DateField javadocs for more information.
      -->
    <fieldType name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>

    <!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
        so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
        Synonyms and stopwords are customized by external files, and stemming is enabled.
        Duplicate tokens at the same position (which may result from Stemmed Synonyms or
        WordDelim parts) are removed.
        -->
    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="org.sindice.solr.plugins.analysis.CustomStandardTokenizerFactory"/>
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <filter class="org.sindice.lucene.index.benchmark.btc.URITrailingSlashFilterFactory"/>
        <!-- Case insensitive stop word removal.
             enablePositionIncrements=true ensures that a 'gap' is left to
             allow for accurate phrase queries.
        -->
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="org.sindice.solr.plugins.analysis.CustomStandardTokenizerFactory"/>
        <filter class="org.sindice.lucene.index.benchmark.btc.URITrailingSlashFilterFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>
  </types>


  <fields>
    <!-- Valid attributes for fields:
      name: mandatory - the name for the field
      type: mandatory - the name of a previously defined type from the <types> section
      indexed: true if this field should be indexed (searchable or sortable)
      stored: true if this field should be retrievable
      compressed: [false] if this field should be stored using gzip compression
        (this will only apply if the field type is compressable; among
        the standard field types, only TextField and StrField are)
      multiValued: true if this field may contain multiple values per document
      omitNorms: (expert) set to true to omit the norms associated with
        this field (this disables length normalization and index-time
        boosting for the field, and saves some memory).  Only full-text
        fields or fields that need an index-time boost need norms.
      termVectors: [false] set to true to store the term vector for a given field.
        When using MoreLikeThis, fields used for similarity should be stored for 
        best performance.
    -->

    <!-- A combination of URI and index, used as the document ID -->
    <field name="id" type="string" indexed="true" stored="false" required="true" />
    <!-- The URI of the resource -->
    <field name="uri" type="string" indexed="true" stored="true" required="true" />
    <!-- The index this document belongs to -->
    <field name="index" type="integer" indexed="true" stored="true" required="true" />
    <!-- The context the resource is in -->
    <field name="context" type="string" indexed="true" stored="true" />
    <!-- Field storing all triples (excluding first component, which is always this resource) -->
    <field name="property_object" type="text" indexed="true" stored="false" multiValued="true" />
    <!-- Default search field containing all text data. -->
    <field name="text" type="text" indexed="true" stored="false" />
    
    <!-- Stores the time when this resource was (lastly) indexed. -->
    <field name="timestamp" type="date" indexed="false" stored="true" default="NOW" />

    <!-- Fields for every predicate, storing the respective object -->
    <dynamicField name="is_*"  type="long"    indexed="true" stored="true" multiValued="false"/>
    <dynamicField name="im_*"  type="long"    indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="sis_*" type="slong"   indexed="true" stored="true" multiValued="false"/>
    <dynamicField name="sim_*" type="slong"   indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="ss_*"  type="string"  indexed="true" stored="true" multiValued="false"/>
    <dynamicField name="sm_*"  type="string"  indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="ts_*"  type="text"    indexed="true" stored="true" multiValued="false" termVectors="true"/>
    <dynamicField name="tm_*"  type="text"    indexed="true" stored="true" multiValued="true"  termVectors="true"/>
    <dynamicField name="ds_*"  type="date"    indexed="true" stored="true" multiValued="false"/>
    <dynamicField name="dm_*"  type="date"    indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="bs_*"  type="boolean" indexed="true" stored="true" multiValued="false"/>
    <dynamicField name="bm_*"  type="boolean" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="fs_*"  type="double"  indexed="true" stored="true" multiValued="false"/>
    <dynamicField name="fm_*"  type="double"  indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="sfs_*" type="sdouble" indexed="true" stored="true" multiValued="false"/>
    <dynamicField name="sfm_*" type="sdouble" indexed="true" stored="true" multiValued="true"/>
    
    <!-- Copy the numeric fields to fields with sortable type. -->
    <copyField source="is_*" dest="sis_*"/>
    <copyField source="im_*" dest="sim_*"/>
    <copyField source="fs_*" dest="sfs_*"/>
    <copyField source="fm_*" dest="sfm_*"/>

  </fields>

  <!-- Field to use to determine and enforce document uniqueness. 
       Unless this field is marked with required="false", it will be a required field
    -->
  <uniqueKey>id</uniqueKey>

  <!-- field for the QueryParser to use when an explicit fieldname is absent -->
  <defaultSearchField>text</defaultSearchField>

  <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
  <solrQueryParser defaultOperator="AND" />

</schema>