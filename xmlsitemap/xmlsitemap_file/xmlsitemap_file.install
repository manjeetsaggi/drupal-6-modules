<?php
// $Id: xmlsitemap_file.install,v 1.1.4.22 2009/02/04 10:50:08 kiam Exp $

/**
 * @file
 * Install file for XML Sitemap: File.
 */

/*****************************************************************************
 * Drupal hooks.
 ****************************************************************************/

/**
 * Implementation of hook_schema().
 */
function xmlsitemap_file_schema() {
  $schema['xmlsitemap_file'] = array(
    'description' => 'The base table for xmlsitemap_file.',
    'fields' => array(
      'fid' => array(
        'description' => 'The ID of the file.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => 'The ID of the node containing the file.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The change time of the file.',
        'type' => 'int',
      ),
      'previously_changed' => array(
        'description' => 'The previous change time of the file.',
        'type' => 'int',
      ),
    ),
    'unique keys' => array('fid_nid' => array('fid', 'nid')),
    'primary key' => array('fid'),
  );
  return $schema;
}

/**
 * Implementation of hook_install().
 */
function xmlsitemap_file_install() {
  drupal_install_schema('xmlsitemap_file');
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_file_update_6000() {
  $ret = array();
  if (db_table_exists('xmlsitemap_file')) {
    $result = array();
    @db_drop_primary_key($result, 'xmlsitemap_file');
    if ($result[0]['success']) {
      $ret[] = $result[0];
    }
    $result = array();
    @db_drop_unique_key($result, 'xmlsitemap_file', 'fid_nid');
    if ($result[0]['success']) {
      $ret[] = $result[0];
    }
    db_change_field($ret, 'xmlsitemap_file', 'fid', 'fid',
      array(
        'description' => 'The ID of the file.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      array('primary key' => array('fid'))
    );
    if (db_column_exists('xmlsitemap_file', 'nid')) {
      db_change_field($ret, 'xmlsitemap_file', 'nid', 'nid',
        array(
          'description' => 'The ID of the node containing the file.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        array('unique keys' => array('fid_nid' => array('fid', 'nid')))
      );
    }
    else {
      db_add_field($ret, 'xmlsitemap_file', 'nid',
        array(
          'description' => 'The ID of the node containing the file.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        array('unique keys' => array('fid_nid' => array('fid', 'nid')))
      );
    }
    if (db_column_exists('xmlsitemap_file', 'last_changed')) {
      db_change_field($ret, 'xmlsitemap_file', 'last_changed', 'changed',
        array(
          'description' => 'The Unix timestamp of the last change.',
          'type' => 'int',
        )
      );
    }
    if (!db_column_exists('xmlsitemap_file', 'changed')) {
      db_add_field($ret, 'xmlsitemap_file', 'changed',
        array(
          'description' => 'The Unix timestamp of the last change.',
          'type' => 'int',
        )
      );
    }
    $result = update_sql("DELETE FROM {xmlsitemap_file} WHERE nid = 0");
    if ($result['success']) {
      $ret[] = $result;
    }
  }
  else {
    db_create_table($ret, 'xmlsitemap_file',
      array(
        'description' => 'The base table for xmlsitemap_file.',
        'fields' => array(
          'fid' => array(
            'description' => 'The ID of the file.',
            'type' => 'int',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'default' => 0,
          ),
          'nid' => array(
            'description' => 'The ID of the node containing the file.',
            'type' => 'int',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'default' => 0,
          ),
          'changed' => array(
            'description' => 'The change time of the file.',
            'type' => 'int',
          ),
          'previously_changed' => array(
            'description' => 'The previous change time of the file.',
            'type' => 'int',
          ),
        ),
        'unique keys' => array('fid_nid' => array('fid', 'nid')),
        'primary key' => array('fid'),
      )
    );
  }
  $ret[] = update_sql("UPDATE {system} SET weight = 10 WHERE name = 'xmlsitemap_file'");
  return $ret;
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_file_update_6100() {
  return array();
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_file_update_6101() {
  return array();
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_file_update_6102() {
  return array();
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_file_update_6103() {
  return array();
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_file_update_6104() {
  return array();
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_file_update_6105() {
  return array();
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_file_update_6106() {
  return array();
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_file_update_6107() {
  return array();
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_file_update_6108() {
  return xmlsitemap_file_update_6000();
}

/**
 * Implementation of hook_uninstall().
 */
function xmlsitemap_file_uninstall() {
  drupal_uninstall_schema('xmlsitemap_file');
}
