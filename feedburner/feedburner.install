<?php
// $Id$

/**
 * @file
 * Install and uninstall schema and functions for the feedburner module.
 */

/**
 * Implementation of hook_schema().
 */
function feedburner_schema() {
  $schema['feedburner'] = array(
    'description' => t('Stores information on FeedBurner feed redirections.'),
    'fields' => array(
      'path' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'description' => t('The source feed.'),
      ),
      'feedburner' => array(
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'description' => t('FeedBurner feed.'),
      ),
      //'verified' => array(
      //  'type' => 'int',
      //  'default' => 0,
      //  'unsigned' => TRUE,
      //  'description' => t('Timestamp of ID verification.'),
      //),
      //'id' => array(
      //  'type' => 'int',
      //  'default' => 0,
      //  'unsigned' => TRUE,
      //  'description' => t('Feed ID integer.'),
      //),
    ),
    'primary key' => array('path'),
    'indexes' => array(
      'feedburner' => array('feedburner'),
    ),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function feedburner_install() {
  drupal_install_schema('feedburner');
  db_query("UPDATE {system} SET weight = -1 WHERE name = 'feedburner'");
  drupal_set_message(t('The FeedBurner module was installed successfully. To start burning your site\'s feeds, go to <a href="@burn-link">Administer >> Build >> FeedBurner</a>. To view and change settings, go to <a href="@settings-link">Administer >> Settings >> FeedBurner</a>.', array('@burn-link' => url('admin/build/feedburner'), '@settings-link' => url('admin/settings/feedburner'))));
}

function feedburner_update_6000() {
  $ret = array();

  if (!db_table_exists('feedburner')) {
    // If new tables not found, install the new schema
    $ret[] = drupal_install_schema('feedburner');
  }
  elseif (db_column_exists('feedburner', 'verified')) {
    // Remove verified column
    db_drop_field($ret, 'feedburner', 'verified');
  }

  // Update from 5.x-0.5 version
  $old_feeds = variable_get('feedburner_feeds', array());
  foreach ($old_feeds as $path => $feedburner) {
    $ret[] = update_sql("INSERT INTO {feedburner} (path, feedburner) VALUES ('" . $path . "', '" . $feedburner . "')");
  }
  variable_del('feedburner_feeds');

  // Update from 5.x-1.x version
  if (db_table_exists('feedburner_feeds')) {
    $old_feeds = db_query("SELECT local_uri, fb_uri FROM {feedburner_feeds}");
    while ($old_feed = db_fetch_object($old_feeds)) {
      $ret[] = update_sql("INSERT INTO {feedburner} (path, feedburner) VALUES ('" . $old_feed->local_uri . "', '" . $old_feed->fb_uri . "')");
    }
    db_drop_table($ret, 'feedburner_feeds');
  }

  // Convert old useragent variable to full regex expression
  $useragents = variable_get('feedburner_useragents', '/feedburner|feedvalidator/i');
  if (!preg_match('%^/.*/i$%', $useragents)) {
    variable_set('feedburner_useragents', '/' . $useragents . '/i');
  }

  db_query("UPDATE {system} SET weight = -1 WHERE name = 'feedburner'");
  cache_clear_all();
  menu_rebuild();
  return $ret;
}

/**
 * Implementation of hook_uninstall().
 */
function feedburner_uninstall() {
  drupal_uninstall_schema('feedburner');
  $variables = db_query("SELECT name FROM {variable} WHERE name LIKE 'feedburner_%%'");
  while ($variable = db_fetch_object($variables)) {
    variable_del($variable->name);
  }
}

/**
 * Implementation of hook_requirements().
 */
function feedburner_requirements($phase) {
  $requirements = array();
  $t = get_t();
  if ($phase == 'runtime') {
    if (!function_exists('simplexml_load_string')) {
      $requirements['feedburner_simplexml'] = array(
        'title' => $t('FeedBurner module'),
        'value' => $t('SimpleXML not enabled'),
        'severity' => REQUIREMENT_WARNING,
        'description' => $t('Some FeedBurner features require the SimpleXML PHP extension (not available for PHP4).'),
      );
    }
  }
  return $requirements;
}
